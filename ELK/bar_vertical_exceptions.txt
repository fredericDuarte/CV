{
  "$schema": "https://vega.github.io/schema/vega/v5.json",
  "width": 800,
  "height":200,
  "padding": 5,
  "autosize":"fit"

 "data": [
       {
      "name": "table",

      "url": {
         %context%:"true",
        "%timefield%": "@timestamp",

         "index": "al_zur_p0281_s0638_errorlog" ,
         "body":{
                   "aggs": {
                    "table": {
                      "composite": {
                        "sources": [
                         {"level": {"terms": {"field": "level.keyword"  }}},
                         {"adabo": {"terms": {"field": "adabo.keyword" }}},
                         {"hostname":{"terms":{"field": "host.name.keyword"}}}
                        ]
                      },
                       "aggs" : 
                              { "messageLog": { "terms": {"field": "messageLog.keyword"  , "size": 10000000  
                              }}}
                   }
         
                  }
         
              }
  
      },
 "format": {
        property: "aggregations.table.buckets"
      },
      "transform": [
         {
           "type":"flatten",
           "fields":["messageLog.buckets"],
           "as": ["messageLogKey"]
         },
         

         {
          "type": "project",
          "fields": [ 
            "key.level",
            "key.adabo",
            "key.hostname"
            ,"messageLogKey"
          ],
          "as": [
            "level",
            "adabo",
            "hostname",
            "message"
          ]
        },
        
        {
          "type" : "formula",
          "expr": "(split(datum.message.key,regexp(/(?<=\\.[a-zA-Z0-9_]{5,})((?=\\:)\\:|((?:'\\s\\[')'\\s\\['|'\\s'))/),3))"
          "as": "split0"
        },

        {
          "type" : "formula",
          "expr": "datum.split0.length > 1 ? datum.split0 : (split(datum.message.key,regexp(/(?<=\\.[a-zA-Z0-9_]{5,})\\s/),3))",
          "as": "split1"
        },

         {
          "type" : "formula",
          "expr": "split(datum.split1[0],regexp(/(?=\\.[^.]+$)./),3)",
          "as": "split2"
        },
        {
          "type" : "formula",
          "expr" :"datum.split2[1]",
          "as": "errorInfo"
           
        },
        {
          "type" : "formula",
          "expr" :"datum.message.doc_count",
          "as": "doCount"
           
        },
       {
          "type": "aggregate",
          "fields":["doCount"],
          "groupby": ["adabo","level","errorInfo"],
          "ops":["sum"],
          "as": ["somme"]
        },
        
         {
          "type": "nest",
          "generate": "true",
          "keys": ["level"]
        }


      ]
    }


  ],

  "signals": [
    {
      "name": "tooltip",
      "value": {},
      "on": [
        {"events": "rect:mouseover", "update": "datum"},
        {"events": "rect:mouseout",  "update": "{}"}
      ]
    }
  ],

  "scales": [
    {
      "name": "xscale",
      "type": "band",
      "domain": {"data": "table", "field": "errorInfo"},
      "range": "width",
      "padding": 0.05,
      "round": true
    },
    {
      "name": "yscale",
      "domain": {"data": "table", "field": "somme"},
      "nice": true,
      "range": "height"
    }
  ],

  "axes": [
    { "orient": "bottom", "scale": "xscale" },
    { "orient": "left", "scale": "yscale" }
  ],

  "marks": [
    {
      "type": "rect",
      "from": {"data":"table"},
      "encode": {
        "enter": {
          "x": {"scale": "xscale", "field": "errorInfo"},
          "width": {"scale": "xscale", "band": 1},
          "y": {"scale": "yscale", "field": "somme"},
          "y2": {"scale": "yscale", "value": 0}
        },
        "update": {
          "fill": {"value": "steelblue"}
        },
        "hover": {
          "fill": {"value": "red"}
        }
      }
    },
    {
      "type": "text",
      "encode": {
        "enter": {
          "align": {"value": "center"},
          "baseline": {"value": "bottom"},
          "fill": {"value": "#333"}
        },
        "update": {
          "x": {"scale": "xscale", "signal": "tooltip.errorInfo", "band": 0.5},
          "y": {"scale": "yscale", "signal": "tooltip.somme", "offset": -2},
          "text": {"signal": "tooltip.somme"},
          "fillOpacity": [
            {"test": "isNaN(tooltip.somme)", "value": 0},
            {"value": 1}
          ]
        }
      }
    }
  ]
}